@model IEnumerable<JOBPORTAL.Models.EmployerSelectsSeeker>

@{
    ViewBag.Title = "Jobs";
}

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="relative max-w-7xl w-full mx-auto px-4">
    <div class="flex flex-col mt-10 mb-10">
        <div class="flex align-center justify-between mb-10">
            <div>
                <span class="mb-2 text-sm font-normal text-blue-600 mb-5">
                    Listing Jobs
                </span>
                <h2 class="text-3xl font-extrabold text-slate-900 tracking-tight uppercase">
                    All Jobs
                </h2>
            </div>
            <div>
                <a href="/Jobs/Create/" class="w-full py-3 px-4 inline-flex justify-center items-center gap-x-2 text-sm font-semibold rounded-lg border border-transparent bg-blue-600 text-white hover:bg-blue-700 disabled:opacity-50 disabled:pointer-events-none dark:focus:outline-none dark:focus:ring-1 dark:focus:ring-gray-600">
                    + Create Job
                </a>
            </div>
        </div>
        <div class="-m-1.5 overflow-x-auto">
            <div class="p-1.5 min-w-full inline-block align-middle">
                <div class="overflow-hidden">
                    <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
                        <thead class="bg-gray-50 dark:bg-gray-700">
                            <tr>
                                <th scope="col" class="px-6 py-6 text-start text-xs font-medium text-gray-500 uppercase">Full name</th>
                                <th scope="col" class="px-6 py-6 text-start text-xs font-medium text-gray-500 uppercase">Username</th>
                                <th scope="col" class="px-6 py-6 text-start text-xs font-medium text-gray-500 uppercase">Email</th>
                                <th scope="col" class="px-6 py-6 text-start text-xs font-medium text-gray-500 uppercase">Phone</th>
                                <th scope="col" class="px-6 py-6 text-start text-xs font-medium text-gray-500 uppercase">Password</th>
                                <th scope="col" class="px-6 py-6 text-start text-xs font-medium text-gray-500 uppercase">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr class="odd:bg-white even:bg-gray-100 dark:odd:bg-slate-900 dark:even:bg-slate-800">
                                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-800 dark:text-gray-200">
                                        @Html.DisplayFor(modelItem => item.EmployerName)
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-800 dark:text-gray-200">
                                        @Html.DisplayFor(modelItem => item.EmployerUsername)
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-800 dark:text-gray-200">
                                        @Html.DisplayFor(modelItem => item.EmployerEmail)
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-800 dark:text-gray-200">
                                        @Html.DisplayFor(modelItem => item.EmployerContactNo)
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-800 dark:text-gray-200">
                                        @Html.DisplayFor(modelItem => item.EmployerPassword)
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-start text-sm font-medium">
                                        @Html.ActionLink("Edit", "Edit", new { id = item.EmployerId }, new { @class = "py-3 px-4 inline-flex items-center gap-x-2 text-sm font-medium rounded-full border border-gray-200 bg-white text-gray-800 shadow-sm hover:bg-gray-50 disabled:opacity-50 disabled:pointer-events-none" }) &nbsp;
                                        @Html.ActionLink("Delete", "Delete", new { id = item.EmployerId }, new { @class = "py-3 px-4 inline-flex items-center gap-x-2 text-sm font-semibold rounded-full border border-transparent bg-red-500 text-white hover:bg-red-600 disabled:opacity-50 disabled:pointer-events-none" }) &nbsp;
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>



<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Employer.EmployerUsername)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.JobSeeker.JobSeekerUsername)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Employer.EmployerUsername)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.JobSeeker.JobSeekerUsername)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.EmployerSelectsSeekerID }) |
                @Html.ActionLink("Details", "Details", new { id = item.EmployerSelectsSeekerID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.EmployerSelectsSeekerID })
            </td>
        </tr>
    }

</table>
